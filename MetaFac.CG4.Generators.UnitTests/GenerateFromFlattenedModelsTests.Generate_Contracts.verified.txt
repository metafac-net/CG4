#region Notices
// <auto-generated>
// Warning: This file was automatically generated. Changes to this file may
// cause incorrect behavior and will be lost when this file is regenerated.
// </auto-generated>
// <copyright>
//     Copyright (c) 2023 MetaFac
// </copyright>
// <information>
// This file was generated using MetaFac.CG4 tools and user supplied metadata.
// Generator: Contracts.2.3
// Metadata : MetaFac.CG4.Generators.UnitTests(.FlattenedModels)
// </information>
#endregion
#nullable enable
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#pragma warning disable CS8019 // Unnecessary using directive
using MetaFac.CG4.Runtime;
using MetaFac.Memory;
using MetaFac.Mutability;
using System;
using System.Collections.Generic;

namespace Generated.Contracts
{
    public enum MyCustomEnum
    {
        DefaultValue = 0,
        AValue = 1,
        AnotherValue = 2,
    }
    public partial interface IBuiltinTypes : IEntityBase
    {
        IReadOnlyList<Boolean>? Bools { get; }
        IReadOnlyList<SByte>? SBytes { get; }
        IReadOnlyList<Byte>? Bytes { get; }
        IReadOnlyList<Int16>? Shorts { get; }
        IReadOnlyList<UInt16>? UShorts { get; }
        IReadOnlyList<Char>? Chars { get; }
        IReadOnlyList<Int32>? Ints { get; }
        IReadOnlyList<UInt32>? UInts { get; }
        IReadOnlyList<Single>? Floats { get; }
        IReadOnlyList<Int64>? Longs { get; }
        IReadOnlyList<UInt64>? ULongs { get; }
        IReadOnlyList<Double>? Doubles { get; }
        IReadOnlyList<DateTime>? DateTimes { get; }
        IReadOnlyList<TimeSpan>? TimeSpans { get; }
        IReadOnlyList<Decimal>? Decimals { get; }
        IReadOnlyList<DateTimeOffset>? DateTimeOffsets { get; }
        IReadOnlyList<Guid>? Guids { get; }
        IReadOnlyList<String?>? Strings { get; }
        IReadOnlyList<Octets?>? Buffers { get; }
        IReadOnlyList<LabApps.Units.Quantity>? Quantities { get; }
        IReadOnlyList<System.DayOfWeek>? DaysOfWeek { get; }
        IReadOnlyList<System.DateTimeKind>? MyDateTimeKinds { get; }
        IReadOnlyList<MyCustomEnum>? MyCustomEnums { get; }
    }
}