#region Notices
// <auto-generated>
// Warning: This file was automatically generated. Changes to this file may
// cause incorrect behavior and will be lost when this file is regenerated.
// </auto-generated>
// <information>
// This file was generated using MetaFac.CG4 tools and user supplied metadata.
// Generator: Contracts.2.7
// Metadata : MetaFac.CG4.TestOrg.Schema(.Polymorphic)
// </information>
#endregion
#nullable enable
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#pragma warning disable CS8019 // Unnecessary using directive
using MetaFac.CG4.Runtime;
using MetaFac.Memory;
using MetaFac.Mutability;
using System;
using System.Collections.Generic;
using System.Numerics;

namespace MetaFac.CG4.TestOrg.Models.Polymorphic.Contracts
{
    public enum CustomEnum
    {
        Value0 = 0,
        Value1 = 1,
    }
    public partial interface IValueNode : IEntityBase
    {
        Int64 Id { get; }
        String? Name { get; }
    }
    public partial interface INumericNode : IValueNode
    {
    }
    public partial interface IBooleanNode : IValueNode
    {
        Boolean BoolValue { get; }
    }
    public partial interface ICustomNode : IValueNode
    {
        CustomEnum CustomValue { get; }
    }
    public partial interface IInt32Node : INumericNode
    {
        Int32 Int32Value { get; }
    }
    public partial interface ISByteNode : INumericNode
    {
        SByte SByteValue { get; }
    }
    public partial interface IByteNode : INumericNode
    {
        Byte ByteValue { get; }
    }
    public partial interface IInt16Node : INumericNode
    {
        Int16 Int16Value { get; }
    }
    public partial interface IUInt16Node : INumericNode
    {
        UInt16 UInt16Value { get; }
    }
    public partial interface ICharNode : IValueNode
    {
        Char CharValue { get; }
    }
    public partial interface IHalfNode : INumericNode
    {
        Half HalfValue { get; }
    }
    public partial interface IUInt32Node : INumericNode
    {
        UInt32 UInt32Value { get; }
    }
    public partial interface ISingleNode : INumericNode
    {
        Single SingleValue { get; }
    }
    public partial interface IDateTimeNode : IValueNode
    {
        DateTime DateTimeValue { get; }
    }
    public partial interface ITimeSpanNode : IValueNode
    {
        TimeSpan TimeSpanValue { get; }
    }
    public partial interface IDateOnlyNode : IValueNode
    {
        DateOnly DateOnlyValue { get; }
    }
    public partial interface ITimeOnlyNode : IValueNode
    {
        TimeOnly TimeOnlyValue { get; }
    }
    public partial interface IInt64Node : INumericNode
    {
        Int64 Int64Value { get; }
    }
    public partial interface IUInt64Node : INumericNode
    {
        UInt64 UInt64Value { get; }
    }
    public partial interface IDoubleNode : INumericNode
    {
        Double DoubleValue { get; }
    }
    public partial interface IStringNode : IValueNode
    {
        String? StringValue { get; }
    }
    public partial interface IOctetsNode : IValueNode
    {
        Octets? OctetsValue { get; }
    }
    public partial interface IGuidNode : IValueNode
    {
        Guid GuidValue { get; }
    }
    public partial interface IDecimalNode : INumericNode
    {
        Decimal DecimalValue { get; }
    }
    public partial interface IDateTimeOffsetNode : IValueNode
    {
        DateTimeOffset DateTimeOffsetValue { get; }
    }
    public partial interface IBigIntNode : INumericNode
    {
        BigInteger Value { get; }
    }
    public partial interface IComplexNode : INumericNode
    {
        Complex Value { get; }
    }
    public partial interface IVersionNode : IValueNode
    {
        Version? Value { get; }
    }
}
