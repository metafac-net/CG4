#region Notices
// <auto-generated>
// Warning: This file was automatically generated. Changes to this file may
// cause incorrect behavior and will be lost when this file is regenerated.
// </auto-generated>
// <information>
// This file was generated using MetaFac.CG4 tools and user supplied metadata.
// Generator: Contracts.2.0
// Metadata : MetaFac.CG4.TestOrg.Schema(.BasicTypes)
// </information>
#endregion
#nullable enable
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#pragma warning disable CS8019 // Unnecessary using directive
using MetaFac.CG4.Runtime;
using MetaFac.Memory;
using MetaFac.Mutability;
using System;
using System.Collections.Generic;

namespace MetaFac.CG4.TestOrg.Models.BasicTypes.Contracts
{
    public enum MyCustomEnum
    {
        DefaultValue = 0,
        FirstValue = 1,
        SomeValue = 2,
        LastValue = 99,
    }
    public partial interface IBasic_bool : IEntityBase
    {
        Boolean ScalarRequired { get; }
        Boolean? ScalarOptional { get; }
        IReadOnlyList<Boolean>? VectorRequired { get; }
        IReadOnlyList<Boolean?>? VectorOptional { get; }
        IReadOnlyDictionary<String, Boolean>? MapRequired { get; }
        IReadOnlyDictionary<String, Boolean?>? MapOptional { get; }
        IReadOnlyDictionary<Boolean, String?>? MapKey { get; }
    }
    public partial interface IBasic_decimal : IEntityBase
    {
        Decimal ScalarRequired { get; }
        Decimal? ScalarOptional { get; }
        IReadOnlyList<Decimal>? VectorRequired { get; }
        IReadOnlyList<Decimal?>? VectorOptional { get; }
        IReadOnlyDictionary<String, Decimal>? MapRequired { get; }
        IReadOnlyDictionary<String, Decimal?>? MapOptional { get; }
        IReadOnlyDictionary<Decimal, String?>? MapKey { get; }
    }
    public partial interface IBasic_DateTimeOffset : IEntityBase
    {
        DateTimeOffset ScalarRequired { get; }
        DateTimeOffset? ScalarOptional { get; }
        IReadOnlyList<DateTimeOffset>? VectorRequired { get; }
        IReadOnlyList<DateTimeOffset?>? VectorOptional { get; }
        IReadOnlyDictionary<String, DateTimeOffset>? MapRequired { get; }
        IReadOnlyDictionary<String, DateTimeOffset?>? MapOptional { get; }
        IReadOnlyDictionary<DateTimeOffset, String?>? MapKey { get; }
    }
    public partial interface IBasic_Guid : IEntityBase
    {
        Guid ScalarRequired { get; }
        Guid? ScalarOptional { get; }
        IReadOnlyList<Guid>? VectorRequired { get; }
        IReadOnlyList<Guid?>? VectorOptional { get; }
        IReadOnlyDictionary<String, Guid>? MapRequired { get; }
        IReadOnlyDictionary<String, Guid?>? MapOptional { get; }
        IReadOnlyDictionary<Guid, String?>? MapKey { get; }
    }
    public partial interface IBasic_DayOfWeek : IEntityBase
    {
        System.DayOfWeek ScalarRequired { get; }
        System.DayOfWeek? ScalarOptional { get; }
        IReadOnlyList<System.DayOfWeek>? VectorRequired { get; }
        IReadOnlyList<System.DayOfWeek?>? VectorOptional { get; }
        IReadOnlyDictionary<String, System.DayOfWeek>? MapRequired { get; }
        IReadOnlyDictionary<String, System.DayOfWeek?>? MapOptional { get; }
        IReadOnlyDictionary<System.DayOfWeek, String?>? MapKey { get; }
    }
    public partial interface IBasic_MyCustomEnum : IEntityBase
    {
        MyCustomEnum ScalarRequired { get; }
        MyCustomEnum? ScalarOptional { get; }
        IReadOnlyList<MyCustomEnum>? VectorRequired { get; }
        IReadOnlyList<MyCustomEnum?>? VectorOptional { get; }
        IReadOnlyDictionary<String, MyCustomEnum>? MapRequired { get; }
        IReadOnlyDictionary<String, MyCustomEnum?>? MapOptional { get; }
        IReadOnlyDictionary<MyCustomEnum, String?>? MapKey { get; }
    }
    public partial interface IBasic_Quantity : IEntityBase
    {
        LabApps.Units.Quantity ScalarRequired { get; }
        LabApps.Units.Quantity? ScalarOptional { get; }
        IReadOnlyList<LabApps.Units.Quantity>? VectorRequired { get; }
        IReadOnlyList<LabApps.Units.Quantity?>? VectorOptional { get; }
        IReadOnlyDictionary<String, LabApps.Units.Quantity>? MapRequired { get; }
        IReadOnlyDictionary<String, LabApps.Units.Quantity?>? MapOptional { get; }
    }
    public partial interface IBasic_string : IEntityBase
    {
        String? Scalar { get; }
        IReadOnlyList<String?>? Vector { get; }
        IReadOnlyDictionary<String, String?>? MapValue { get; }
    }
    public partial interface IBasic_Octets : IEntityBase
    {
        Octets? Scalar { get; }
        IReadOnlyList<Octets?>? Vector { get; }
        IReadOnlyDictionary<String, Octets?>? MapValue { get; }
        IReadOnlyDictionary<Octets, String?>? MapKey { get; }
    }
}
